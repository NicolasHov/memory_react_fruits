{"version":3,"sources":["components/Card.js","components/Game.js","services/addScoreServices.js","components/HighScores.js","services/getHighScoreServices.js","services/deleteHighScoreServices.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","x","y","callback","state","image","onClick","style","width","height","background","objectFit","flipCard","gameState","pos","updatedGameState","Array","from","Game","useState","cards","newArray","forEach","item","_id","push","value","process","generateCards","array","i","length","j","Math","floor","random","temp","shuffle","concat","map","generateGrid","setGameState","clicksHistory","setClicksHistory","gameLaunched","setGameLaunched","counter","setCounter","useEffect","setTimeout","alert","arr","size","getPos","cardClicked","updatedLastClicks","console","log","card","filter","revealedCards","score","myHeaders","Headers","append","raw","JSON","stringify","fetch","method","headers","body","redirect","mode","then","response","text","result","catch","error","addHighScore","ceil","v","slice","row","backgroundColor","HighScores","top5","setTop5","highscores","setHighscores","data","scores","parse","sort","a","b","sign","display","flexDirection","marginRight","id","Footer","fontSize","href","App","minHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f2f0359.chunk.js","sourcesContent":["import React from 'react'\n\nconst Card = props => {\n  // eslint-disable-next-line react/prop-types\n  const { x, y, callback, state, image } = props\n  return (\n      <button\n        onClick={() => callback(x, y)}\n        style={{ width: '100px', height: '100px', background: state !== 'hidden' ? `url(${image})` : 'none', objectFit: 'fill' }}\n      />\n  )\n}\n\nexport default Card\n","import React, { useState, useEffect } from 'react'\nimport Card from './Card'\nimport { addHighScore } from '../services/addScoreServices'\n\nconst flipCard = (gameState, pos) => {\n  const updatedGameState = Array.from(gameState)\n  updatedGameState[pos].state = updatedGameState[pos].state === 'hidden' ? 'revealed' : 'hidden'\n  return updatedGameState\n}\n\nconst Game = () => {\n  /// GENERATE BOARD ///\n\n  const generateCards = () => {\n    const fruitsArray = ['pomme-rouge', 'banane', 'orange', 'citron-vert', 'grenade', 'abricot', 'citron', 'fraise', 'pomme-verte'\n    // , 'pêche', 'raisin', 'pastèque', 'prune', 'poire', 'cerise-rouge', 'framboise', 'mangue', 'cerise-jaune'\n    ]\n    const newArray = []\n    fruitsArray.forEach((item, _id) => {\n      newArray.push({ state: 'hidden', value: item, image: (_id < 10) ? process.env.PUBLIC_URL + '/parts-0' + _id + '.png' : process.env.PUBLIC_URL + '/parts-' + _id + '.png' })\n    })\n    return newArray\n  }\n\n  const shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1))\n      const temp = array[i]\n      array[i] = array[j]\n      array[j] = temp\n    }\n    return array\n  }\n\n  const generateGrid = () => {\n    const cards = generateCards()\n    return shuffle(cards.concat([...cards.map(x => ({ ...x }))]))\n  }\n\n  const [gameState, setGameState] = useState(generateGrid())\n  const [clicksHistory, setClicksHistory] = useState([])\n  const [gameLaunched, setGameLaunched] = useState(false) // TODO: use a gameStatus instead with useState([Launched, Won, Lost])\n\n  /// TIMER LOGIC ///\n  const TIME = 60 // time limit to play\n  const [counter, setCounter] = useState(TIME)\n\n  useEffect(() => {\n    if (!gameLaunched) {\n      return\n    }\n    if (counter > 0) {\n      setTimeout(() => setCounter(counter - 1), 1000)\n    } else {\n      alert('YOU LOSE!')\n      setGameLaunched(false)\n      setCounter(TIME)\n    // TODO: regenerate grid when game ends\n    }\n  }, [gameLaunched, counter])\n\n  const WIDTH = 6 // width of game board\n  const getPos = (x, y) => x * WIDTH + y // to convert position to one dimension tab\n\n  /// PLAYER ACTION ///\n\n  const cardClicked = (x, y) => {\n    setGameLaunched(true)\n    setClicksHistory(() => {\n      const updatedLastClicks = Array.from(clicksHistory)\n      updatedLastClicks.push([x, y])\n      console.log('updatedLastClicks :', updatedLastClicks)\n      return updatedLastClicks\n    })\n    const pos = getPos(x, y)\n    const card = gameState[pos]\n\n    if (card.state === 'removed') {\n      return // do nothing if the card is alredy removed\n    }\n\n    if (gameState.filter(card => card.state === 'revealed').length >= 2 && card.state === 'hidden') {\n      return // do nothing if there is 2 card already revealed & the card on which I clicked is hidden\n    }\n\n    setGameState(flipCard(gameState, pos))\n    const revealedCards = gameState.filter(card => card.state === 'revealed')\n    if (revealedCards.length === 2) {\n      if (revealedCards[0].value === revealedCards[1].value) {\n        revealedCards.forEach(card => { card.state = 'removed' })\n        setClicksHistory([])\n      } else { // automatically flip back the two cards revealed when they are differents\n        setTimeout(() => {\n          setGameState(flipCard(gameState, pos))\n          setGameState(flipCard(gameState, getPos(clicksHistory[0][0], clicksHistory[0][1])))\n          setClicksHistory([])\n        }, 1000)\n      }\n    }\n\n    if (gameState.filter(card => card.state === 'removed').length === gameState.length) {\n      addHighScore(counter)\n      // setGameStatus(Won)\n      alert('YOU WIN! Score: ' + counter)\n    }\n  }\n\n  const chunk = (arr, size) =>\n    Array.from({ length: Math.ceil(arr.length / size) }, (v, i) =>\n      arr.slice(i * size, i * size + size)\n    )\n\n  return (\n      <>\n        { counter < 60 && counter > 0 ? <div>C&lsquo;est parti !</div> : <br/> }\n        <div>\n          {chunk(gameState, WIDTH).map((row, i) => <div key={i}>{row.map((item, j) =>\n            <Card key={getPos(i, j)} x={i} y={j} value={item.value} callback={cardClicked} state={item.state} image={item.image} />\n          )}</div>)}\n        </div>\n        <div>Countdown: {counter}</div>\n        <div style={{ width: ((TIME - counter) * 0.6) + 'rem', height: '3rem', backgroundColor: 'red' }} />\n      </>\n  )\n}\n\nexport default Game\n","\nexport const addHighScore = score => {\n  const myHeaders = new Headers()\n  myHeaders.append('Content-Type', 'application/json')\n\n  const raw = JSON.stringify({\n    value: score\n  })\n\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow',\n    mode: 'cors'\n  }\n\n  fetch('http://localhost:3000/api/scores/', requestOptions)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error))\n}\n","import React, { useState, useEffect } from 'react'\nimport { getHighScore } from '../services/getHighScoreServices'\nimport { deleteHighScore } from '../services/deleteHighScoreServices'\n\nexport const HighScores = () => {\n  const [top5, setTop5] = useState([])\n  const [highscores, setHighscores] = useState(null)\n\n  useEffect(() => {\n    getHighScore(data => {\n      setHighscores(data.scores)\n    })\n  }, [])\n\n  useEffect(() => {\n    if (highscores === null) return\n    setTop5(highscores.sort((a, b) => Math.sign(b.value - a.value)).slice(0, 5))\n  }, [highscores])\n\n  return (\n      <ul>{(top5.length)\n        ? top5.map(score => (\n          <li key={score._id} style={{ display: 'flex', flexDirection: 'row' }}>\n            <div style={{ marginRight: '1rem' }}>{score.value}</div>\n            <button onClick={() => {\n              deleteHighScore(score._id)\n              setHighscores(highscores.filter(x => x._id !== score._id))\n            }}>Delete</button>\n          </li>\n        )\n        )\n        : <div>...There&lsquo;s no High scores yet</div>\n      }</ul>\n  )\n}\n\nexport default HighScores\n","\nexport const getHighScore = callback => {\n  const requestOptions = {\n    method: 'GET',\n    redirect: 'follow',\n    mode: 'cors'\n  }\n\n  fetch('http://localhost:3000/api/scores/', requestOptions)\n    .then(response => response.text())\n    .then(result => callback(JSON.parse(result)))\n    .catch(error => console.log('error', error))\n}\n","\nexport const deleteHighScore = id => {\n  // const myHeaders = new Headers()\n  // myHeaders.append('Content-Type', 'application/json')\n\n  const requestOptions = {\n    method: 'DELETE',\n    // headers: myHeaders,\n    redirect: 'follow',\n    mode: 'cors'\n  }\n\n  fetch('http://localhost:3000/api/scores/' + id, requestOptions)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error))\n}\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <>\n        <div style={{ display: 'flex', flexDirection: 'column', fontSize: 'small' }}>\n            <div>Sources :</div>\n            <div>Client : <a href=\"https://github.com/NicolasHov/memory_react_fruits\">https://github.com/NicolasHov/memory_react_fruits</a></div>\n            <div>API Highscores : <a href=\"https://github.com/NicolasHov/memory_fruits_server\">https://github.com/NicolasHov/memory_fruits_server</a></div>\n        </div>\n    </>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport './App.css'\nimport Game from './components/Game'\nimport HighScores from './components/HighScores'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  return (\n    <>\n    <div style={{ minHeight: 'calc(100vh - 90px)' }}>\n      <div>\n        <h1>Memory</h1>\n        <h2>High Scores</h2>\n        <HighScores />\n      </div>\n      <Game />\n    </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}